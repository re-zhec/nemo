#pragma once

#include <memory>
#include <string>
#include <vector>
#include <SFML/Graphics/RenderWindow.hpp>

#include "utility/type/XY.hpp"

namespace nemo
{

class MenuCursor;        // Forward declaration.
class MenuEntryGraphics; // Forward declaration.

////////////////////////////////////////////////////////////////////////////////
///
/// @brief Abstract class for a menu entry.
///
////////////////////////////////////////////////////////////////////////////////
class MenuEntry : public std::enable_shared_from_this<MenuEntry>
{
public:

	using MenuEntryID = int;

	/////////////////////////////////////////////////////
	/// @brief Construct a menu entry.
	///
	/// @param id           ID for the menu entry.
	/// @param text         Text to display.
	/// @param pos          Top left position.
	/// @param graphics     Graphics component
	/////////////////////////////////////////////////////
	MenuEntry(
		const MenuEntryID                        id,
		const std::shared_ptr<MenuEntryGraphics> graphics
	);

	/////////////////////////////////////////////////////
	/// @brief Destructor
	/////////////////////////////////////////////////////
	virtual
	~MenuEntry() {}

	/////////////////////////////////////////////////////
	/// @brief Get the parent of this menu entry.
	///
	/// @return Parent entry.
	/////////////////////////////////////////////////////
	std::shared_ptr<MenuEntry>
	parent()
	const;

	/////////////////////////////////////////////////////
	/// @brief
	/////////////////////////////////////////////////////
	virtual void
	accept(MenuCursor& cursor) = 0;

	/////////////////////////////////////////////////////
	/// @brief
	/////////////////////////////////////////////////////
	void
	update(sf::RenderWindow& window);


////////////////////////////////////////////////////////////////////////////////
//                                                                            //
////////////////////////////////////////////////////////////////////////////////
private:

	/////////////////////////////////////////////////////
	// Member attributes
	/////////////////////////////////////////////////////
	MenuEntryID id_; ///< ID.


////////////////////////////////////////////////////////////////////////////////
//                                                                            //
////////////////////////////////////////////////////////////////////////////////
protected:
	/////////////////////////////////////////////////////
	// Member attributes
	/////////////////////////////////////////////////////
	std::shared_ptr<MenuEntryGraphics> graphics_; ///< Graphics component.	
	std::shared_ptr<MenuEntry>         parent_;   ///< Parent menu entry.
	
};

}